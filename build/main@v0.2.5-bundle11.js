window.__nefbl_pack__bundleSrc__[33]=function(){var n,e={};var t=window.__nefbl_pack__getBundle("1").Component,a=window.__nefbl_pack__getBundle("66").default,r=t({selector:"javascript-math",template:window.__nefbl_pack__getBundle("67").default,styles:[a]})(n=function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)})||n;return e.default=r,e},window.__nefbl_pack__bundleSrc__[66]=function(){var n={};return n.default="",n},window.__nefbl_pack__bundleSrc__[67]=function(){var n={};return n.default='<div class="doc-view">\n    <h2>\n        JS 对象 / Math 数学\n    </h2>\n    <h3>\n        trunc() 方法\n    </h3>\n    <h4>\n        语法\n    </h4>\n    <pre ui-code>Math.trunc(x)</pre>\n    <p>\n        返回数字的整数部分，此方法不会将数字向上/向下舍入到最接近的整数，而只是删除小数。\n    </p>\n    <p class="warn">\n        温馨提示：此方法的JavaScript 版本为ECMAScript 6。\n    </p>\n    <h3>\n        floor() 方法\n    </h3>\n    <h4>\n        语法\n    </h4>\n    <pre ui-code>Math.floor(x)</pre>\n    <p>\n        将数字向下舍入为最接近的整数，并返回结果。\n    </p>\n    <h3>\n        ceil() 方法\n    </h3>\n    <h4>\n        语法\n    </h4>\n    <pre ui-code>Math.ceil(x)</pre>\n    <p>\n        将数字向上舍入为其最接近的整数，并返回结果。\n    </p>\n    <h3>\n        round() 方法\n    </h3>\n    <h4>\n        语法\n    </h4>\n    <pre ui-code>Math.round(x)</pre>\n    <p>\n        将数字四舍五入到最接近的整数，并返回结果。\n    </p>\n</div>\n',n};