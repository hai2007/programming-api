window.__nefbl_pack__bundleSrc__[26]=function(){var r,n={};function e(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}var t,o,i,a=(0,window.__nefbl_pack__getBundle("1").Component)({selector:"css-gradients",template:window.__nefbl_pack__getBundle("61").default,styles:[]})((t=function r(){!function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,r)},o&&e(t.prototype,o),i&&e(t,i),Object.defineProperty(t,"prototype",{writable:!1}),r=t))||r;return n.default=a,n},window.__nefbl_pack__bundleSrc__[61]=function(){var r={};return r.default="<div class=\"doc-view\">\r\n    <h2>\r\n        CSS 属性&值 / 渐变色\r\n    </h2>\r\n    <h3>\r\n        线性渐变\r\n    </h3>\r\n    <p>\r\n        你可以定义一个方向和至少两个颜色来定义渐变：\r\n    </p>\r\n    <pre ui-code='css'>background-image: linear-gradient(direction, color-stop1, color-stop2, ...);</pre>\r\n    <p>\r\n        方向（direction）可以是to bottom、to top、to right、to left、to bottom right等，默认to bottom。\r\n    </p>\r\n    <p>\r\n        同时，你还可以定义一个角度（用于代替方向）：\r\n    </p>\r\n    <pre ui-code='css'>background-image: linear-gradient(angle, color-stop1, color-stop2);</pre>\r\n    <img src=\"./image/css3-gradients-deg.jpg\" width='300' />\r\n    <p>\r\n        角度是指水平线和渐变线之间的角度，逆时针方向计算。换句话说，0deg 将创建一个从下到上的渐变，90deg 将创建一个从左到右的渐变。\r\n    </p>\r\n    <p class=\"warn\">\r\n        但是，请注意很多浏览器（Chrome、Safari、firefox等）的使用了旧的标准，即 0deg 将创建一个从左到右的渐变，90deg 将创建一个从下到上的渐变。换算公式 90 - x = y 其中 x\r\n        为标准角度，y为非标准角度。\r\n    </p>\r\n    <button ui-goto-example='linear-gradient'>查看用例>>></button>\r\n    <h3>\r\n        径向渐变\r\n    </h3>\r\n    <pre ui-code='css'>background-image: radial-gradient(shape size at position, start-color, ..., last-color);</pre>\r\n    <p>\r\n        shape 参数定义了形状。它可以是值 circle 或 ellipse。其中，circle 表示圆形，ellipse 表示椭圆形。默认值是 ellipse。\r\n    </p>\r\n    <button ui-goto-example='radial-gradient'>查看用例>>></button>\r\n</div>\r\n",r};