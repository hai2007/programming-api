window.__nefbl_pack__bundleSrc__[28]=function(){var r,n={};function e(r,n){for(var e=0;e<n.length;e++){var p=n[e];p.enumerable=p.enumerable||!1,p.configurable=!0,"value"in p&&(p.writable=!0),Object.defineProperty(r,p.key,p)}}var p,t,o,a=(0,window.__nefbl_pack__getBundle("1").Component)({selector:"css-transform",template:window.__nefbl_pack__getBundle("63").default,styles:[]})((p=function r(){!function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,r)},t&&e(p.prototype,t),o&&e(p,o),Object.defineProperty(p,"prototype",{writable:!1}),r=p))||r;return n.default=a,n},window.__nefbl_pack__bundleSrc__[63]=function(){var r={};return r.default="<div class=\"doc-view\">\r\n    <h2>\r\n        CSS 属性&值 / Transform\r\n    </h2>\r\n    <h3>\r\n        transform: none | transform-functions;\r\n    </h3>\r\n    <p>\r\n        通过设置该属性的值，我们可以对元素使用转换，下面是具体的属性值。\r\n    </p>\r\n    <p>\r\n        定义 2D 转换，使用六个值的矩阵：\r\n    </p>\r\n    <pre ui-code>\r\n        matrix(a,b,c,d,e,f)\r\n    </pre>\r\n    <p>\r\n        定义 3D 转换，使用 16 个值的 4x4 矩阵：\r\n    </p>\r\n    <pre ui-code>\r\n        matrix3d(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)\r\n    </pre>\r\n    <p>\r\n        定义 2D 转换：\r\n    </p>\r\n    <pre ui-code>\r\n        translate(x,y)\r\n    </pre>\r\n    <p>\r\n        定义 3D 转换：\r\n    </p>\r\n    <pre ui-code>\r\n        translate3d(x,y,z)\r\n    </pre>\r\n    <p>\r\n        定义转换，只是用 X 轴的值：\r\n    </p>\r\n    <pre ui-code>\r\n        translateX(x)\r\n    </pre>\r\n    <p>\r\n        定义转换，只是用 Y 轴的值：\r\n    </p>\r\n    <pre ui-code>\r\n        translateY(y)\r\n    </pre>\r\n    <p>\r\n        定义 3D 转换，只是用 Z 轴的值：\r\n    </p>\r\n    <pre ui-code>\r\n        translateZ(z)\r\n    </pre>\r\n    <p>\r\n        定义 2D 缩放转换：\r\n    </p>\r\n    <pre ui-code>\r\n        scale(x,y)\r\n    </pre>\r\n    <p>\r\n        定义 3D 缩放转换：\r\n    </p>\r\n    <pre ui-code>\r\n        scale3d(x,y,z)：\r\n    </pre>\r\n    <p>\r\n        通过设置 X 轴的值来定义缩放转换：\r\n    </p>\r\n    <pre ui-code>\r\n        scaleX(x)\r\n    </pre>\r\n    <p>\r\n        通过设置 Y 轴的值来定义缩放转换：\r\n    </p>\r\n    <pre ui-code>\r\n        scaleY(y)\r\n    </pre>\r\n    <p>\r\n        通过设置 Z 轴的值来定义 3D 缩放转换：\r\n    </p>\r\n    <pre ui-code>\r\n        scaleZ(z)\r\n    </pre>\r\n    <p>\r\n        定义 2D 旋转，在参数中规定角度：\r\n    </p>\r\n    <pre ui-code>\r\n        rotate(angle)\r\n    </pre>\r\n    <p>\r\n        定义 3D 旋转：\r\n    </p>\r\n    <pre ui-code>\r\n        rotate3d(x,y,z,angle)\r\n    </pre>\r\n    <p>\r\n        定义沿着 X 轴的 3D 旋转：\r\n    </p>\r\n    <pre ui-code>\r\n        rotateX(angle)\r\n    </pre>\r\n    <p>\r\n        定义沿着 Y 轴的 3D 旋转：\r\n    </p>\r\n    <pre ui-code>\r\n        rotateY(angle)\r\n    </pre>\r\n    <p>\r\n        定义沿着 Z 轴的 3D 旋转：\r\n    </p>\r\n    <pre ui-code>\r\n        rotateZ(angle)\r\n    </pre>\r\n    <p>\r\n        定义沿着 X 和 Y 轴的 2D 倾斜转换：\r\n    </p>\r\n    <pre ui-code>\r\n        skew(x-angle,y-angle)\r\n    </pre>\r\n    <p>\r\n        定义沿着 X 轴的 2D 倾斜转换：\r\n    </p>\r\n    <pre ui-code>\r\n        skewX(angle)\r\n    </pre>\r\n    <p>\r\n        定义沿着 Y 轴的 2D 倾斜转换：\r\n    </p>\r\n    <pre ui-code>\r\n        skewY(angle)\r\n    </pre>\r\n    <p>\r\n        为 3D 转换元素定义透视视图：\r\n    </p>\r\n    <pre ui-code>\r\n        perspective(n)\r\n    </pre>\r\n    <h3>\r\n        transform-origin: x-axis y-axis z-axis;\r\n    </h3>\r\n    <p>\r\n        设置元素转换的中心点，最直观的例子旋转图片，改变图片选择依赖的旋转中心。\r\n    </p>\r\n    <button ui-goto-example='transform-origin'>查看用例>>></button>\r\n    <h3>\r\n        transform-style: flat | preserve-3d;\r\n    </h3>\r\n    <p>\r\n        定义里面转换的元素是在2D平面呈现还是在3D空间呈现，讲的直白些，就是这个元素里面的空间维度是二维还是三维。\r\n    </p>\r\n    <button ui-goto-example='transform-style'>查看用例>>></button>\r\n    <h3>\r\n        perspective: number | none;\r\n    </h3>\r\n    <p>\r\n        属性是定义3D元素距试图的距离，设置以后，其子元素会获得透视效果，需要注意的是该值只对3D转换有效，这也是很容易理解的。此外，还可以通过Transform的属性值的方式设置，二者是有一定区别的，你可以认为，前者是把整个看成一个舞台，后者是每一个都是一个舞台。\r\n    </p>\r\n    <button ui-goto-example='perspective'>查看用例>>></button>\r\n    <h3>\r\n        perspective-origin: x-axis y-axis;\r\n    </h3>\r\n    <p>\r\n        必须和perspective一起使用，只对3D转换元素有效，简单的理解就是你的眼睛看的焦点。\r\n    </p>\r\n    <button ui-goto-example='perspective-origin'>查看用例>>></button>\r\n    <h3>\r\n        backface-visibility:hidden | visible;\r\n    </h3>\r\n    <p>\r\n        这个很简单，设置当元素背对着屏幕时候，是否是可见的。\r\n    </p>\r\n</div>",r};