window.__nefbl_pack__bundleSrc__[33]=function(){var n,r={};function e(n,r){for(var e=0;e<r.length;e++){var t=r[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var t,a,o,c=window.__nefbl_pack__getBundle("1").Component,l=window.__nefbl_pack__getBundle("70").default,p=c({selector:"javascript-math",template:window.__nefbl_pack__getBundle("71").default,styles:[l]})((t=function n(){!function(n,r){if(!(n instanceof r))throw new TypeError("Cannot call a class as a function")}(this,n)},a&&e(t.prototype,a),o&&e(t,o),Object.defineProperty(t,"prototype",{writable:!1}),n=t))||n;return r.default=p,r},window.__nefbl_pack__bundleSrc__[70]=function(){var n={};return n.default="",n},window.__nefbl_pack__bundleSrc__[71]=function(){var n={};return n.default='<div class="doc-view">\r\n    <h2>\r\n        JS 对象 / Math 数学\r\n    </h2>\r\n    <h3>\r\n        trunc() 方法\r\n    </h3>\r\n    <h4>\r\n        语法\r\n    </h4>\r\n    <pre ui-code>Math.trunc(x)</pre>\r\n    <p>\r\n        返回数字的整数部分，此方法不会将数字向上/向下舍入到最接近的整数，而只是删除小数。\r\n    </p>\r\n    <p class="warn">\r\n        温馨提示：此方法的JavaScript 版本为ECMAScript 6。\r\n    </p>\r\n    <h3>\r\n        floor() 方法\r\n    </h3>\r\n    <h4>\r\n        语法\r\n    </h4>\r\n    <pre ui-code>Math.floor(x)</pre>\r\n    <p>\r\n        将数字向下舍入为最接近的整数，并返回结果。\r\n    </p>\r\n    <h3>\r\n        ceil() 方法\r\n    </h3>\r\n    <h4>\r\n        语法\r\n    </h4>\r\n    <pre ui-code>Math.ceil(x)</pre>\r\n    <p>\r\n        将数字向上舍入为其最接近的整数，并返回结果。\r\n    </p>\r\n    <h3>\r\n        round() 方法\r\n    </h3>\r\n    <h4>\r\n        语法\r\n    </h4>\r\n    <pre ui-code>Math.round(x)</pre>\r\n    <p>\r\n        将数字四舍五入到最接近的整数，并返回结果。\r\n    </p>\r\n</div>\r\n',n};